"use strict";
/*
 *  Copyright 2020 Amazon.com or its affiliates
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Device = void 0;
const cdk = require("@aws-cdk/core");
class Device extends cdk.Resource {
    constructor(parent, id, props) {
        super(parent, id);
        this.thing = props.thing;
        this.syncShadow = props.syncShadow;
        this.certificateArn = props.certificateArn;
        this.id = id;
    }
    resolve() {
        return {
            id: this.id,
            thingArn: this.stack.formatArn({
                service: 'iot',
                resource: 'thing',
                resourceName: this.thing.thingName
            }),
            certificateArn: this.certificateArn,
            syncShadow: this.syncShadow
        };
    }
}
exports.Device = Device;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGV2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7R0FjRzs7O0FBRUgscUNBQXFDO0FBbUJyQyxNQUFhLE1BQU8sU0FBUSxHQUFHLENBQUMsUUFBUTtJQWVwQyxZQUFZLE1BQXFCLEVBQUUsRUFBVSxFQUFFLEtBQWtCO1FBQzdELEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztRQUNuQyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUM7UUFDM0MsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVELE9BQU87UUFDSCxPQUFPO1lBQ0gsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO1lBQ1gsUUFBUSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDO2dCQUMzQixPQUFPLEVBQUUsS0FBSztnQkFDZCxRQUFRLEVBQUUsT0FBTztnQkFDakIsWUFBWSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUzthQUNyQyxDQUFDO1lBQ0YsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1lBQ25DLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVTtTQUM5QixDQUFBO0lBQ0wsQ0FBQztDQUNKO0FBbkNELHdCQW1DQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFxuICogIENvcHlyaWdodCAyMDIwIEFtYXpvbi5jb20gb3IgaXRzIGFmZmlsaWF0ZXNcbiAqICBcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqICBcbiAqICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqICBcbiAqICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgKiBhcyBjZGsgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBDZm5UaGluZyB9IGZyb20gJ0Bhd3MtY2RrL2F3cy1pb3QnO1xuaW1wb3J0ICogYXMgZ2cgZnJvbSAnQGF3cy1jZGsvYXdzLWdyZWVuZ3Jhc3MnO1xuXG5leHBvcnQgaW50ZXJmYWNlIERldmljZVByb3BzIHtcbiAgICAvKipcbiAgICAgKiBUaGUgVGhpbmcgYXNzb2NpYXRlZCB0byB0aGlzIERldmljZVxuICAgICAqL1xuICAgIHJlYWRvbmx5IHRoaW5nOiBDZm5UaGluZyxcbiAgICAvKipcbiAgICAgKiBFbmFibGUgZGV2aWNlIHNoYWRvdyBzeW5jaGluZyB0byB0aGUgY2xvdWRcbiAgICAgKi9cbiAgICByZWFkb25seSBzeW5jU2hhZG93OiBib29sZWFuLFxuICAgIC8qKlxuICAgICAqIFRoZSBjZXJ0aWZpY2F0ZSBBcm4gdXNlZCB0byBhdXRoZW50aWNhdGVcbiAgICAgKi9cbiAgICByZWFkb25seSBjZXJ0aWZpY2F0ZUFybjogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBEZXZpY2UgZXh0ZW5kcyBjZGsuUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFRIZSB0aGluZyBhc3NvY2lhdGVkIHRvIHRoaXMgZGV2aWNlXG4gICAgICovXG4gICAgcmVhZG9ubHkgdGhpbmc6IENmblRoaW5nO1xuICAgIC8qKlxuICAgICAqIExvY2FsIHNoYWRvdyBzeW5jaGluZyB0byBjbG91ZFxuICAgICAqL1xuICAgIHJlYWRvbmx5IHN5bmNTaGFkb3c6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGhlIGNlcnRpZmljYXRlIGFyblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGNlcnRpZmljYXRlQXJuOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBpZDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocGFyZW50OiBjZGsuQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogRGV2aWNlUHJvcHMpIHtcbiAgICAgICAgc3VwZXIocGFyZW50LCBpZCk7XG4gICAgICAgIHRoaXMudGhpbmcgPSBwcm9wcy50aGluZztcbiAgICAgICAgdGhpcy5zeW5jU2hhZG93ID0gcHJvcHMuc3luY1NoYWRvdztcbiAgICAgICAgdGhpcy5jZXJ0aWZpY2F0ZUFybiA9IHByb3BzLmNlcnRpZmljYXRlQXJuO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgfVxuXG4gICAgcmVzb2x2ZSgpOiBnZy5DZm5EZXZpY2VEZWZpbml0aW9uLkRldmljZVByb3BlcnR5IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiB0aGlzLmlkLFxuICAgICAgICAgICAgdGhpbmdBcm46IHRoaXMuc3RhY2suZm9ybWF0QXJuKHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlOiAnaW90JyxcbiAgICAgICAgICAgICAgICByZXNvdXJjZTogJ3RoaW5nJyxcbiAgICAgICAgICAgICAgICByZXNvdXJjZU5hbWU6IHRoaXMudGhpbmcudGhpbmdOYW1lXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGNlcnRpZmljYXRlQXJuOiB0aGlzLmNlcnRpZmljYXRlQXJuLFxuICAgICAgICAgICAgc3luY1NoYWRvdzogdGhpcy5zeW5jU2hhZG93XG4gICAgICAgIH1cbiAgICB9IFxufVxuXG4iXX0=