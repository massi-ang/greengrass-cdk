"use strict";
/*
 *  Copyright 2020 Amazon.com or its affiliates
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Generic = void 0;
const connector_1 = require("../connector");
/**
 * A generic Connector bag for adding those connectors not yet implemented with specific classes
 * Documentation for all connectors can be found https://docs.aws.amazon.com/greengrass/latest/developerguide/connectors-list.html
 */
class Generic extends connector_1.Connector {
    constructor(scope, id, props) {
        super(scope, id);
        this._parameters = props.parameters;
        this._name = props.name;
        this._version = props.version;
    }
    get parameters() {
        return this._parameters;
    }
    get connectorArn() {
        return `arn:aws:greengrass:region::/connectors/${this._name}/versions/${this._version}`;
    }
}
exports.Generic = Generic;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdlbmVyaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7OztHQWNHOzs7QUFFSCw0Q0FBd0Q7QUFrQnhEOzs7R0FHRztBQUNILE1BQWEsT0FBUSxTQUFRLHFCQUFTO0lBS2xDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBNEI7UUFDbEUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQTtRQUNoQixJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7UUFDcEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLFlBQVk7UUFDWixPQUFPLDBDQUEwQyxJQUFJLENBQUMsS0FBSyxhQUFhLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQTtJQUMzRixDQUFDO0NBQ0o7QUFuQkQsMEJBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyogXG4gKiAgQ29weXJpZ2h0IDIwMjAgQW1hem9uLmNvbSBvciBpdHMgYWZmaWxpYXRlc1xuICogIFxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICogIFxuICogIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICogIFxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbm5lY3RvciwgQ29ubmVjdG9yUHJvcHMgfSBmcm9tICcuLi9jb25uZWN0b3InXG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdAYXdzLWNkay9jb3JlJ1xuZXhwb3J0IGludGVyZmFjZSBHZW5lcmljQ29ubmVjdG9yUHJvcHMgZXh0ZW5kcyBDb25uZWN0b3JQcm9wcyB7XG4gICAgLyoqXG4gICAgICogVGhlIHBhcmFtdGVycyBmb3IgdGhlIGNvbm5lY3Rvci5cbiAgICAgKiBTdXBwb3J0ZWQgdmFsdWVzIGNhbiBiZSBmb3VuZCBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vZ3JlZW5ncmFzcy9sYXRlc3QvZGV2ZWxvcGVyZ3VpZGUvY29ubmVjdG9ycy1saXN0Lmh0bWxcbiAgICAgKi9cbiAgICByZWFkb25seSBwYXJhbWV0ZXJzOiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGNvbm5lY3RvciwgZWcgSW90QW5hbGl0aWNzXG4gICAgICovXG4gICAgcmVhZG9ubHkgbmFtZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBjb25uZWN0b3IgdG8gdXNlXG4gICAgICovXG4gICAgcmVhZG9ubHkgdmVyc2lvbjogbnVtYmVyO1xufVxuXG4vKipcbiAqIEEgZ2VuZXJpYyBDb25uZWN0b3IgYmFnIGZvciBhZGRpbmcgdGhvc2UgY29ubmVjdG9ycyBub3QgeWV0IGltcGxlbWVudGVkIHdpdGggc3BlY2lmaWMgY2xhc3Nlc1xuICogRG9jdW1lbnRhdGlvbiBmb3IgYWxsIGNvbm5lY3RvcnMgY2FuIGJlIGZvdW5kIGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9ncmVlbmdyYXNzL2xhdGVzdC9kZXZlbG9wZXJndWlkZS9jb25uZWN0b3JzLWxpc3QuaHRtbFxuICovXG5leHBvcnQgY2xhc3MgR2VuZXJpYyBleHRlbmRzIENvbm5lY3RvciB7XG4gICAgcHJpdmF0ZSBfcGFyYW1ldGVyczogYW55O1xuICAgIHByaXZhdGUgX25hbWU6IHN0cmluZztcbiAgICBwcml2YXRlIF92ZXJzaW9uOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogR2VuZXJpY0Nvbm5lY3RvclByb3BzKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZClcbiAgICAgICAgdGhpcy5fcGFyYW1ldGVycyA9IHByb3BzLnBhcmFtZXRlcnM7XG4gICAgICAgIHRoaXMuX25hbWUgPSBwcm9wcy5uYW1lO1xuICAgICAgICB0aGlzLl92ZXJzaW9uID0gcHJvcHMudmVyc2lvbjtcbiAgICB9XG5cbiAgICBnZXQgcGFyYW1ldGVycygpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcGFyYW1ldGVycztcbiAgICB9XG5cbiAgICBnZXQgY29ubmVjdG9yQXJuKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgYXJuOmF3czpncmVlbmdyYXNzOnJlZ2lvbjo6L2Nvbm5lY3RvcnMvJHt0aGlzLl9uYW1lfS92ZXJzaW9ucy8ke3RoaXMuX3ZlcnNpb259YFxuICAgIH1cbn1cbiJdfQ==